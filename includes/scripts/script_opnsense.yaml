toggle_vpn_hosts:
  sequence:
    - service: rest_command.toggle_vpn_hosts
      response_variable: toggle_response
    - if:
      - condition: template
        value_template: >
          {{ toggle_response.content.changed == true }}
      then:
        - service: rest_command.firewall_alias_reconfigure
          response_variable: alias_reconfigure_response
        - if:
          - condition: template
            value_template: >
              {{ alias_reconfigure_response.content.status == "ok" }}
          then:
            - if:
              - condition: template
                value_template: >
                  {{ toggle_response.content.result == 'Enabled' }}
              then:
                - service: input_boolean.turn_on
                  entity_id: input_boolean.vpn_hosts
              else:
                - service: input_boolean.turn_off
                  entity_id: input_boolean.vpn_hosts
            - service: homeassistant.update_entity
              entity_id: binary_sensor.vpn_hosts

toggle_vpn_pihole_hosts:
  sequence:
    - service: rest_command.toggle_vpn_pihole_hosts
      response_variable: toggle_response
    - if:
      - condition: template
        value_template: >
          {{ toggle_response.content.changed == true }}
      then:
        - service: rest_command.firewall_alias_reconfigure
          response_variable: alias_reconfigure_response
        - if:
          - condition: template
            value_template: >
              {{ alias_reconfigure_response.content.status == "ok" }}
          then:
            - if:
              - condition: template
                value_template: >
                  {{ toggle_response.content.result == 'Enabled' }}
              then:
                - service: input_boolean.turn_on
                  entity_id: input_boolean.vpn_pihole_hosts
              else:
                - service: input_boolean.turn_off
                  entity_id: input_boolean.vpn_pihole_hosts
            - service: homeassistant.update_entity
              entity_id: binary_sensor.vpn_pihole_hosts

toggle_vpn_pc_hosts:
  sequence:
    - service: rest_command.toggle_vpn_pc_hosts
      response_variable: toggle_response
    - if:
      - condition: template
        value_template: >
          {{ toggle_response.content.changed == true }}
      then:
        - service: rest_command.firewall_alias_reconfigure
          response_variable: alias_reconfigure_response
        - if:
          - condition: template
            value_template: >
              {{ alias_reconfigure_response.content.status == "ok" }}
          then:
            - if:
              - condition: template
                value_template: >
                  {{ toggle_response.content.result == 'Enabled' }}
              then:
                - service: input_boolean.turn_on
                  entity_id: input_boolean.vpn_pc_hosts
              else:
                - service: input_boolean.turn_off
                  entity_id: input_boolean.vpn_pc_hosts
            - service: homeassistant.update_entity
              entity_id: binary_sensor.vpn_pc_hosts

toggle_vpn_mobile_hosts:
  sequence:
    - service: rest_command.toggle_vpn_mobile_hosts
      response_variable: toggle_response
    - if:
      - condition: template
        value_template: >
          {{ toggle_response.content.changed == true }}
      then:
        - service: rest_command.firewall_alias_reconfigure
          response_variable: alias_reconfigure_response
        - if:
          - condition: template
            value_template: >
              {{ alias_reconfigure_response.content.status == "ok" }}
          then:
            - if:
              - condition: template
                value_template: >
                  {{ toggle_response.content.result == 'Enabled' }}
              then:
                - service: input_boolean.turn_on
                  entity_id: input_boolean.vpn_mobile_hosts
              else:
                - service: input_boolean.turn_off
                  entity_id: input_boolean.vpn_mobile_hosts
            - service: homeassistant.update_entity
              entity_id: binary_sensor.vpn_mobile_hosts

toggle_vpn_proxmox_hosts:
  sequence:
    - service: rest_command.toggle_vpn_proxmox_hosts
      response_variable: toggle_response
    - if:
      - condition: template
        value_template: >
          {{ toggle_response.content.changed == true }}
      then:
        - service: rest_command.firewall_alias_reconfigure
          response_variable: alias_reconfigure_response
        - if:
          - condition: template
            value_template: >
              {{ alias_reconfigure_response.content.status == "ok" }}
          then:
            - if:
              - condition: template
                value_template: >
                  {{ toggle_response.content.result == 'Enabled' }}
              then:
                - service: input_boolean.turn_on
                  entity_id: input_boolean.vpn_proxmox_hosts
              else:
                - service: input_boolean.turn_off
                  entity_id: input_boolean.vpn_proxmox_hosts
            - service: homeassistant.update_entity
              entity_id: binary_sensor.vpn_proxmox_hosts

update_wg0_peers:
  sequence:
    - service: input_select.set_options
      target:
        entity_id: input_select.wg0_peers
      data:
        options: >
          {% set data = namespace(peers = []) %}
          {% set peers = merge_response(state_attr('sensor.wg0_peers', 'peers')) %}
          {% for peer in peers %}
            {% if peer.value != 'home0' %}
              {% set data.peers = data.peers + [peer.value] %}
            {% endif %}
          {% endfor %}
          {{ data.peers }}
    - service: input_select.select_option
      target:
        entity_id: input_select.wg0_peers
      data:
        option: >
          {{ states('sensor.wg0_selected_peer') }}
    - service: homeassistant.update_entity
      entity_id: rest_sensor.wg0_selected_peer_id

update_vpn_hosts:
  sequence:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.vpn_hosts
    - if:
      - condition: state
        entity_id: binary_sensor.vpn_hosts
        state: 'on'
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.vpn_hosts
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.vpn_hosts

update_vpn_pihole_hosts:
  sequence:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.vpn_pihole_hosts
    - if:
      - condition: state
        entity_id: binary_sensor.vpn_pihole_hosts
        state: 'on'
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.vpn_pihole_hosts
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.vpn_pihole_hosts

update_vpn_pc_hosts:
  sequence:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.vpn_pc_hosts
    - if:
      - condition: state
        entity_id: binary_sensor.vpn_pc_hosts
        state: 'on'
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.vpn_pc_hosts
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.vpn_pc_hosts

update_vpn_mobile_hosts:
  sequence:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.vpn_mobile_hosts
    - if:
      - condition: state
        entity_id: binary_sensor.vpn_mobile_hosts
        state: 'on'
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.vpn_mobile_hosts
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.vpn_mobile_hosts

update_vpn_proxmox_hosts:
  sequence:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.vpn_proxmox_hosts
    - if:
      - condition: state
        entity_id: binary_sensor.vpn_proxmox_hosts
        state: 'on'
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.vpn_proxmox_hosts
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.vpn_proxmox_hosts

select_wg0_peer:
  sequence:
    - service: script.toggle_vpn_hosts
    - service: rest_command.wireguard_toggle_server
      response_variable: wg_toggle_server_off_response
    - if:
      - condition: template
        value_template: >
          {{
            wg_toggle_server_off_response.content.result == 'Disabled' and
            wg_toggle_server_off_response.content.changed == true
          }}
      then:
        - service: rest_command.wireguard_service_reconfigure
          response_variable: wg_disable_reconfig_response
        - if:
          - condition: template
            value_template: >
              {{ wg_disable_reconfig_response.content.result == 'ok' }}
          then:
            - service: rest_command.airvpn_disconnect_opnsense
              response_variable: airvpn_disconnect_response
            - if:
              - condition: template
                value_template: >
                  {{ airvpn_disconnect_response.content.result == 'ok' }}
              then:
                - service: rest_command.wireguard_server_set_peer
                  response_variable: wg_set_peer_response
                - if:
                  - condition: template
                    value_template: >
                      {{ wg_set_peer_response.content.result == 'saved' }}
                  then:
                    - service: rest_command.wireguard_toggle_server
                      response_variable: wg_toggle_server_on_response
                    - if:
                      - condition: template
                        value_template: >
                          {{
                            wg_toggle_server_on_response.content.result == 'Enabled' and
                            wg_toggle_server_on_response.content.changed == true
                          }}
                      then:
                        - service: rest_command.wireguard_service_reconfigure
                          response_variable: wg_enable_reconfig_response
    - service: script.toggle_vpn_hosts

toggle_wg0_enabled:
  sequence:
    - service: rest_command.wireguard_toggle_server
      response_variable: wg_toggle_response
    - service: rest_command.wireguard_service_reconfigure
      response_variable: wg_reconfigure_response
    - if:
      - condition: template
        value_template: >
          {{ wg_toggle_response.content.result == 'Enabled' }}
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.wg0_enabled
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.wg0_enabled
    - service: homeassistant.update_entity
      entity_id: binary_sensor.wg0_enabled

update_wg0_enabled:
  sequence:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.wg0_enabled
    - if:
      - condition: state
        entity_id: binary_sensor.wg0_enabled
        state: 'on'
      then:
        - service: input_boolean.turn_on
          entity_id: input_boolean.wg0_enabled
      else:
        - service: input_boolean.turn_off
          entity_id: input_boolean.wg0_enabled